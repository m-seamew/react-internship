{"version":3,"sources":["components/function/returnDates.js","redux/types.js","redux/action.js","components/taskItem.js","components/function/returnStat.js","components/taskList.js","components/controllerButton.js","components/Modal/ModalForm.js","components/Modal/ModalFormRredact.js","App.js","reportWebVitals.js","redux/tableReducer.js","redux/taskReducer.js","redux/rootReducer.js","index.js"],"names":["returnDates","cont","forEach","el","match","replace","arr","push","Array","from","Set","CREATE_TASK","DELETE_TASK","UPDATE_TASK","UPDATE_TASK_MODAL_OPEN","UPDATE_TASK_MODAL_CLOSE","ARCHIVE_TASK","CHANGE_IS_ARCHIVED","createTask","task","type","payload","returnCathegoryImg","cathegory","cathegoriesLinks","img","default","Object","keys","e","className","src","alt","arrButtonsFunc","id","deleteTask","updateTaskOpen","archiveTask","returnButtons","syncIcon","isArchived","parametrArchive","result","filter","index","values","headers","onClick","length","matchDispatchToProps","connect","state","syncCathegories","table","cathegories","icons","syncIsArchived","arrMatches","paramTable","openPopup","archived","taskName","createdTitle","content","map","active","returnStat","data","stat","find","key","checkTableHeader","syncTable","main","loadStat","tasks","loadTask","tableType","updateisOpen","TaskList","syncTasks","syncisOpenRedacting","Table","striped","bordered","hover","propsType","PropTypes","string","required","isOpen","changeIsArchived","modalOpen","useState","setState","StateTogle","event","prev","target","name","value","Button","variant","ButtonGroup","syncUpdatedEl","updated","syncOpenUI","handleIsOpenChange","Add","changeInputHandler","persist","Form","Group","controlId","Label","Control","onChange","as","defaultValue","indexOf","rows","newDate","Date","newCreatedTitle","getMonth","getDate","getFullYear","newTask","getMilliseconds","created","updateTaskClose","sendUpdatedTask","updateIsOpen","ModalFormRredact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","redaction","delete","toArchive","fromArchive","rootReducer","combineReducers","action","concat","item","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbd114ed.chunk.js","sourcesContent":["const returnDates = ( cont ) => {\n    const regExp = [ \n        /((0|1)[0-9]([.\\-/])[0-3][0-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([0-3][0-9]([.\\-/])(0|1)[0-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([0-9]([.\\-/])[0-3][0-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([0-3][0-9]([.\\-/])[0-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([0-9]([.\\-/])[0-9]([.\\-/])(19|20)[0-9]{2})/g,\n    ]\n\n    const wrongExp = [\n        /([0-9][0-9]([.\\-/])[3-9][2-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([3-9][2-9]([.\\-/])[0-9][0-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([1-9][3-9]([.\\-/])[1-9][3-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([2-9][0-9]([.\\-/])[2-9][0-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([0][0]([.\\-/])[0-9][0-9]([.\\-/])(19|20)[0-9]{2})/g,\n        /([0-9][0-9]([.\\-/])[0][0]([.\\-/])(19|20)[0-9]{2})/g,\n    ]\n\n    wrongExp.forEach( el => {\n        if(cont.match(el) !== null){\n            cont.match(el).forEach( el => cont = cont.replace(el, ''));           \n        }\n    })\n    \n\n    let arr = [];\n    regExp.forEach( el => { \n        if(cont.match(el) !== null){\n            cont.match(el).forEach( el => {\n                cont = cont.replace(el, '');\n                arr.push(el);\n            });           \n        }\n    });\n\n    return Array.from( new Set(arr) );\n}\n\nexport default returnDates;\n\n","export const CREATE_TASK = 'TASK/CREATE_TASK';\nexport const DELETE_TASK = 'TASK/DELETE_TASK';\nexport const UPDATE_TASK = 'TASK/UPDATE_TASK';\nexport const UPDATE_TASK_MODAL_OPEN = 'TASK/UPDATE_TASK_MODAL_OPEN';\nexport const UPDATE_TASK_MODAL_CLOSE = 'TASK/UPDATE_TASK_MODAL_CLOSE';\nexport const ARCHIVE_TASK = 'TASK/ARCHIVE_TASK';\nexport const PARAM_REDACT = 'TASK/PARAM_REDACT';\n\nexport const CHANGE_IS_ARCHIVED = 'TABLE/CHANGE_IS_ARCHIVED'\n","import { CREATE_TASK, CHANGE_IS_ARCHIVED, DELETE_TASK, UPDATE_TASK, UPDATE_TASK_MODAL_OPEN, UPDATE_TASK_MODAL_CLOSE, ARCHIVE_TASK, PARAM_REDACT} from \"./types\";\n\nexport function createTask(task) {\n    return {\n        type: CREATE_TASK,\n        payload: task,\n    }\n}\n\nexport function deleteTask(id) {\n    return {\n        type: DELETE_TASK,\n        payload: id,\n    }\n}\n\nexport function updateTaskOpen(id) {\n    return {\n        type: UPDATE_TASK_MODAL_OPEN,\n        payload: id,\n    }\n}\n\nexport function updateTaskClose() {\n    return {\n        type: UPDATE_TASK_MODAL_CLOSE\n    }   \n}\n\nexport function sendUpdatedTask(data, id){\n    return {\n        type: UPDATE_TASK,\n        payload: {data,id},\n    } \n}\n\nexport function archiveTask(id) {\n    return {\n        type: ARCHIVE_TASK,\n        payload: id,\n    }\n}\n\nexport function changeParamRedact(data) {\n    return {\n        type: PARAM_REDACT,\n        payload: data,\n    }\n}\n\nexport function changeIsArchived() {\n    return {\n        type: CHANGE_IS_ARCHIVED,\n    }\n}\n\n\n\n","import React from 'react';\nimport returnDates from './function/returnDates';\nimport { connect } from 'react-redux';\nimport { deleteTask, updateTaskOpen, archiveTask } from '../redux/action';\n\nconst renderReturnedDates = ( arrMatches ) => {\n    return arrMatches.length > 0\n              ? arrMatches.map( ( el, index ) => <div key={ index }> { el } </div> )\n              : '-';\n}\n\nconst returnCathegoryImg = ( cathegory, cathegoriesLinks ) => {\n    let img = cathegoriesLinks.default;\n    Object.keys( cathegoriesLinks ).forEach( e => e === cathegory ? img = cathegoriesLinks[e] : null);\n    const result = <div className=\"todo__icon\">\n                        <img className=\"icon--vertical-middle todo__icon--header\" src={img} alt=\"cathegory img\" />\n                   </div>\n    return result;\n    \n}\n\nconst redactingFunc = (id, deleteTask, updateTaskOpen, archiveTask) => {\n    updateTaskOpen(id);\n}\n\nconst deleteFunc = (id, deleteTask, updateTaskOpen, archiveTask) => {\n    deleteTask(id);\n}\n\nconst archiveFunc = (id, deleteTask, updateTaskOpen, archiveTask) => {\n    archiveTask(id);\n}\n\nconst arrButtonsFunc = [\n    redactingFunc,\n    deleteFunc,\n    archiveFunc,\n]\nconst returnButtons = (syncIcon, isArchived, id, deleteTask, updateTaskOpen, archiveTask) => {\n    const parametrArchive = isArchived ? 'toArchive' : 'fromArchive';\n    const result = [];\n    syncIcon.filter( el => Object.keys(el)[0] !== parametrArchive ).forEach( (el,index)=> {\n        const img = Object.values(el)[0];\n        const headers = \n            <td key={result.length}>\n                <div className=\"todo__icon\" onClick={ () => arrButtonsFunc[index](id, deleteTask, updateTaskOpen, archiveTask) }>\n                    <img className=\"icon--vertical-middle todo__icon--header\" src={img} alt=\"img\"/>\n                </div>\n            </td>\n        result.push(headers);\n    });\n    return result;\n}\n\nconst TaskItem = ({syncCathegories, syncIcon, syncIsArchived,  deleteTask,\n    updateTaskOpen,\n    archiveTask, task, paramTable, openPopup}) => {\n\n        if(paramTable === 'main'){\n            if(syncIsArchived === task.archived){\n                return (\n                    <tr>\n                        <td>{returnCathegoryImg(task.cathegory, syncCathegories)}</td>\n                        <td>{task.taskName}</td>\n                        <td>{task.createdTitle}</td>\n                        <td>{task.cathegory}</td>\n                        <td className=\"todo__content-conteiner\">\n                            <div className=\"todo__content todo__content--small\">\n                                { task.content }\n                            </div>\n                        </td>\n                        <td>{ renderReturnedDates( returnDates(task.content) ) }</td>\n                        {returnButtons(syncIcon, syncIsArchived, task.id, deleteTask, updateTaskOpen, archiveTask, openPopup)}\n                    </tr>\n                )\n            }else{\n                return <tr/>;\n            }\n        }else if(paramTable === 'stat'){\n            return(\n                <tr>\n                    <td>{returnCathegoryImg(Object.keys(task)[0], syncCathegories)}</td>\n                    <td>{Object.keys(task)[0]}</td>\n                    <td>{task[Object.keys(task)[0]].active}</td>\n                    <td>{task[Object.keys(task)[0]].archived}</td>\n                </tr>\n            )\n        }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        syncCathegories: state.table.cathegories,\n        syncIcon: state.table.icons,\n        syncIsArchived: state.table.isArchived,\n    }\n}\n\nconst matchDispatchToProps = {\n    deleteTask,\n    updateTaskOpen,\n    archiveTask\n  } \n\nexport default connect(mapStateToProps, matchDispatchToProps)(TaskItem);","const returnStat = ( data, cathegoriesLinks ) => {\n    let stat = Array.from( new Set( data.map( el => el.cathegory ) ) ).map( el => ( { [ el ]:{ archived: 0, active: 0, img: cathegoriesLinks.default } } ) );\n\n    data.forEach( el => {\n        stat.find( e => {\n            const key = Object.keys(e)[0];\n            if(key === el.cathegory){\n                el.archived ? e[key].archived++ : e[key].active++; \n            } \n        });\n    });  \n\n    stat.forEach( el => {\n        Object.keys( cathegoriesLinks ).forEach( e => {\n            const key = Object.keys(el)[0];\n            if( key === e ){\n                el[key].img = cathegoriesLinks[e];\n            } \n        });\n    })  \n    return stat;\n}\n\nexport default returnStat;","import React from \"react\";\nimport TaskItem from \"./taskItem\";\nimport {connect} from \"react-redux\"\nimport { Table } from 'react-bootstrap';\nimport { PropTypes } from \"prop-types\";\nimport returnStat from \"./function/returnStat\";\n\n\nconst checkTableHeader = (syncTable, syncIcon, table, ) => {\n    let result = [];\n\n    if(table === 'main'){\n        result = syncTable.main.map( (el, index) => {\n            return <td key={index}>{el}</td>\n        })\n        \n        syncIcon.filter(el => Object.keys(el)[0] !== 'fromArchive').forEach( (el,index)=> {\n            const img = Object.values(el)[0];\n            const headers = \n                <td key={result.length}>\n                    <div className=\"todo__icon todo__icon--update\">\n                        <img className=\"icon--vertical-middle todo__icon--header\" src={img} alt=\"img\"/>\n                    </div>\n                </td>\n            result.push(headers);\n        });\n\n    } else if (table === 'stat'){\n        result = syncTable.stat.map( (el, index) => {\n            return <td key={index}>{el}</td>\n        })\n    }\n    return result;\n}\n\nconst loadStat = (tasks, cathegories) => {\n    const arr = returnStat(tasks, cathegories);\n    return loadTask(arr, 'stat');\n}\n\nconst loadTask = (tasks, tableType, updateisOpen) => {\n    let result = [];\n    tasks.forEach( (el, index) => {\n            result.push( <TaskItem task={el} key={index} paramTable={tableType} />)          \n    })\n    return result;\n}\n\n\n\n\nconst TaskList = ({ syncTasks, syncTable, syncIcon, syncCathegories, table, syncisOpenRedacting }) =>{\n    \n    return (\n        <div>\n        <Table striped bordered hover >\n            <thead> \n                <tr>\n                    { checkTableHeader(syncTable, syncIcon, table) }       \n                </tr>\n            </thead>\n            <tbody>\n                    { table === 'main' ? loadTask(syncTasks, 'main') : loadStat(syncTasks, syncCathegories) }\n            </tbody> \n        </Table>\n        </div>\n    )\n}\n\nTaskList.propsType = {\n    table: PropTypes.string.required,\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        syncTasks: state.tasks.tasks,\n        syncTable: state.table,\n        syncIcon: state.table.icons,\n        syncCathegories: state.table.cathegories,\n        syncisOpenRedacting: state.tasks.isOpen,\n    }\n}\n\nexport default connect(mapStateToProps, null)(TaskList);","import React from 'react';\nimport { ButtonGroup, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { changeIsArchived } from '../redux/action';\n\nconst ControllersButton = ({ changeIsArchived, modalOpen }) => {\n    const[state, setState] = useState({ state: 'true' })\n\n    const StateTogle = (event) =>{\n        setState(prev => ({ ...prev, ...{\n            [event.target.name]: event.target.value\n        }}))\n        changeIsArchived();\n    }\n\n    const handleIsOpenChange = () => {\n        modalOpen();            \n    }\n\n    return (\n        <div className=\"nav__todo\">\n            <Button variant=\"primary\" onClick={ handleIsOpenChange }>New Task</Button>{' '}\n            <ButtonGroup aria-label=\"Basic example\">\n                <Button variant={ `secondary ${ state.state === 'true' ? \"active\" : ''}`} onClick={ StateTogle } name=\"state\" value={true}> Active tasks </Button>\n                <Button variant={ `secondary ${ state.state === 'false' ? \"active\" : ''}`   } onClick={ StateTogle } name=\"state\" value={false}> Archived task </Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nconst matchDispatchToProps = {\n    changeIsArchived,\n  } \n  \n  \nexport default connect( null, matchDispatchToProps )( ControllersButton );","import React from \"react\";\nimport './modal.scss'\nimport { Form } from \"react-bootstrap\";\nimport {useState} from 'react';\nimport { connect } from \"react-redux\";\nimport {createTask} from '../../redux/action';\nimport { Button } from \"react-bootstrap\";\n\nconst ModalForm = ({createTask, modalOpen, syncUpdatedEl}) => {\n\n    const handleIsOpenChange = () => {\n      modalOpen();       \n    }\n\n    const [task, setState] = useState({\n      taskName: '',\n      cathegories: ['Task', 'Random Thought', 'Idea'],\n      content: '',\n      cathegory: 'Task',\n    });\n    const Add = task.cathegories.map(el => el);\n\n    const changeInputHandler = event => {\n      event.persist();\n      setState(prev => ({...prev, ...{\n        [event.target.name]: event.target.value\n      }}))\n    }\n    const changeInputSelect = (e) => task[e.target.name] = e.target.value;\n    const inputSelectIndex = () => Add.indexOf(task.cathegory) !== -1 ? Add.indexOf(task.cathegory) : 0;\n    \n    const sendNewTask = () => {\n      const newDate = new Date();\n      const monthes = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n      const newCreatedTitle = `${ monthes[ newDate.getMonth() ] } ${ newDate.getDate() }, ${ newDate.getFullYear() }`\n      const newTask = {\n        id: 10000 + newDate.getMilliseconds(),\n        taskName: task.taskName,\n        created:  newDate,\n        createdTitle: newCreatedTitle,\n        cathegory: task.cathegory,\n        content: task.content,\n        archived: false,\n      }\n\n      createTask(newTask);\n      handleIsOpenChange();\n    }\n    \n    return(\n      <div className=\"modal\">\n        <div className=\"modal__body\">\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Task Name</Form.Label>\n            <Form.Control type=\"text\" name='taskName' value={task.taskName} onChange={changeInputHandler}/>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Cathegory</Form.Label>\n            <Form.Control as=\"select\" name='cathegory'\n                          onChange={changeInputSelect}\n                          defaultValue={task.cathegories[inputSelectIndex()]}\n             >\n              {\n                 Add.map((el, index) => <option key={index} value={el}>{el}</option>)\n              }\n            </Form.Control>\n\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Content</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} name='content' value={task.content} onChange={changeInputHandler}/>\n            <div className=\"modal__controllers-cont\">\n              <Button className=\"modal__btn\" variant=\"success\" onClick={sendNewTask}>Add task</Button>{' '}\n              <Button className=\"modal__btn\" variant=\"danger\" onClick={handleIsOpenChange}>Cancel</Button>{' '}\n            </div>\n          \n          </Form.Group>\n      </Form>\n        </div>\n      </div>\n    )\n    \n}\n\nconst matchDispatchToProps = {\n  createTask,\n} \n\nconst mapStateToProps = (state) =>{\n  return{\n      syncUpdatedEl: state.tasks.updated,\n      syncOpenUI: state.tasks.isOpen,\n  }\n}\n\n\nexport default connect( mapStateToProps, matchDispatchToProps )(ModalForm);","import React from \"react\";\nimport './modal.scss'\nimport { Form } from \"react-bootstrap\";\nimport { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { createTask, updateTaskClose, sendUpdatedTask } from '../../redux/action';\nimport { Button } from \"react-bootstrap\";\n\nconst ModalFormRedact = ({ syncUpdatedEl,syncOpenUI, updateTaskClose, sendUpdatedTask }) => {\n\n    const handleIsOpenChange = () => {\n      updateTaskClose();\n    }\n\n    const [task, setState] = useState(\n        {\n        taskName: syncUpdatedEl && syncUpdatedEl[0] ? syncUpdatedEl[0].taskName : '',\n        cathegories: ['Task', 'Random Thought', 'Idea'],\n        content: syncUpdatedEl && syncUpdatedEl[0] ? syncUpdatedEl[0].content: '',\n        cathegory: syncUpdatedEl && syncUpdatedEl[0] ? syncUpdatedEl[0].cathegory: '',\n        } \n    );\n    const Add = task.cathegories.map( el => el);\n\n    const changeInputHandler = event => {\n      event.persist();\n      setState(prev => ({ ...prev, ...{\n        [event.target.name]: event.target.value\n      }}))\n    }\n\n    const changeInputSelect = (e) => task[e.target.name] = e.target.value;\n    const inputSelectIndex = () => Add.indexOf( task.cathegory ) !== -1 ? Add.indexOf( task.cathegory ) : 0;\n    \n    const createUpdates = () => {\n      const newTask = {\n        taskName: task.taskName,\n        cathegory: task.cathegory,\n        content: task.content,\n      }\n\n    sendUpdatedTask( newTask, syncUpdatedEl[0].id );\n    handleIsOpenChange();\n    }\n    \n    return(\n      <div className=\"modal\">\n        <div className=\"modal__body\">\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Task Name</Form.Label>\n            <Form.Control type=\"text\" name='taskName' value={task.taskName} onChange={ changeInputHandler }/>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Cathegory</Form.Label>\n            <Form.Control as=\"select\" name='cathegory'\n                          onChange={ changeInputSelect }\n                          defaultValue={ task.cathegories[inputSelectIndex()] }\n             >\n              {\n                 Add.map((el, index) => <option key={ index } value={ el }> { el } </option>)\n              }\n            </Form.Control>\n\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Content</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} name='content' value={task.content} onChange={changeInputHandler}/>\n            <div className=\"modal__controllers-cont\">\n              <Button className=\"modal__btn\" variant=\"success\" onClick={ createUpdates }>Update task</Button>{' '}\n              <Button className=\"modal__btn\" variant=\"danger\" onClick={ handleIsOpenChange }>Cancel</Button>{' '}\n            </div>\n          \n          </Form.Group>\n        </Form>\n        </div>\n      </div>\n    )\n    \n}\n\nconst matchDispatchToProps = {\n  createTask,\n  updateTaskClose,\n  sendUpdatedTask,\n} \n\nconst mapStateToProps = ( state ) =>{\n  return{\n      syncUpdatedEl: state.tasks.updated,\n      syncOpenUI: state.tasks.isOpen,\n  }\n}\n\nexport default connect( mapStateToProps, matchDispatchToProps )(ModalFormRedact);","import React from \"react\";\nimport TodoList from \"./components/taskList\";\nimport ControllerButtons from \"./components/controllerButton\";\nimport ModalForm from \"./components/Modal/ModalForm\";\nimport ModalFormRredact from './components/Modal/ModalFormRredact';\nimport {connect} from \"react-redux\"\nimport { useState } from 'react';\n\n\nconst App = ({syncOpenUI}) => {\n  const [isOpen, setState] = useState(false);\n\n  const updateIsOpen=(value)=> {\n    setState(!isOpen);\n  };\n\n\n  return (\n      <main className=\"main\">\n        <div className=\"main__container\">\n\n          <div className=\"main__table-scroll\">\n            <TodoList table={'main'} modalOpen={updateIsOpen} />\n          </div>\n\n          <div className=\"main__table-scroll\">\n            <TodoList table={'stat'}/>\n          </div>\n\n          <div>\n            <ControllerButtons modalOpen={updateIsOpen}/>\n          </div>\n          { isOpen &&(<div>\n            <ModalForm modalOpen={updateIsOpen}/>\n          </div>) }\n          { syncOpenUI &&(<ModalFormRredact/> )}\n\n\n        </div>\n      </main>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return{\n      syncUpdatedEl: state.tasks.updated,\n      syncOpenUI: state.tasks.isOpen,\n  }\n}\n\nexport default connect( mapStateToProps, null )(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_IS_ARCHIVED } from \"./types\";\n\nconst initialState = {\n    main: ['', 'Name', 'Created', 'Cathegory', 'Content', 'Dates'],\n    stat: ['', 'Cathegory', 'Active', 'Archived'],\n    icons:[\n        {redaction: '/img/pencil.svg'},\n        {delete: '../img/delete.svg'},\n        {toArchive: '../img/download-button.svg'},\n        {fromArchive: '../img/reply.svg'}\n    ],\n    cathegories: {\n        'Task': '/img/cathegories/task.svg',\n        'Random Thought': '/img/cathegories/thinking.svg',\n        'Idea': '/img/cathegories/lamp.svg',\n        'default': '/img/cathegories/task.svg',\n    },\n    isArchived: false,\n}\n\nexport const tableReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case CHANGE_IS_ARCHIVED:\n            return { ...state, isArchived: !state.isArchived}\n        default: return state;\n    }\n}","import { CREATE_TASK, DELETE_TASK, ARCHIVE_TASK, UPDATE_TASK, UPDATE_TASK_MODAL_OPEN, UPDATE_TASK_MODAL_CLOSE  } from \"./types\";\n\nconst initialState = {\n    tasks: [\n        {\n            id: 1,\n            taskName: \"Shoping list\",\n            created: \"Sun Jul 04 2021 20:38:54 GMT+0200 (Восточная Европа, стандартное время)\",\n            createdTitle: \"Jul 4, 2021\",\n            cathegory: \"Task\",\n            content: \"Tomatoes, bread\",\n            archived: false\n        },\n        {\n            id: 2,\n            taskName: \"The theory of evolution\",\n            created: \"Sun Jul 04 2021 20:39:45 GMT+0200 (Восточная Европа, стандартное время)\",\n            createdTitle: \"Jul 4, 2021\",\n            cathegory: \"Random Thought\",\n            content: \"The evolution...\",\n            archived: false\n        },\n        {\n            id: 3,\n            taskName: \"New feature\",\n            created: \"Sun Jul 04 2021 20:41:17 GMT+0200 (Восточная Европа, стандартное время)\",\n            createdTitle: \"Jul 4, 2021\",\n            cathegory: \"Idea\",\n            content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent aliquet porttitor metus, et aliquet arcu faucibus vitae. Maecenas vitae nisi ut leo vulputate convallis. Vivamus metus purus, semper sed neque eu, fringilla pulvinar turpis. \",\n            archived: true,\n        },\n        {\n            id: 4,\n            taskName: \"Visit the doctor\",\n            created: \"Sun Jul 04 2021 20:42:56 GMT+0200 (Восточная Европа, стандартное время)\",\n            createdTitle: \"Jul 4, 2021\",\n            cathegory: \"Task\",\n            content: \"I’m gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021\",\n            archived: false,\n        },\n        {\n            id: 5,\n            taskName: \"StartUp idea presentation\",\n            created: \"Sun Jul 04 2021 20:44:51 GMT+0200 (Восточная Европа, стандартное время)\",\n            createdTitle: \"Jul 4, 2021\",\n            cathegory: \"Idea\",\n            content: \"deadline for application - 4.08.2021\",\n            archived: false\n        },\n        {\n            id: 6,\n            taskName: \"Go to the cinema\",\n            created: \"Sun Jul 04 2021 20:46:19 GMT+0200 (Восточная Европа, стандартное время)\",\n            createdTitle: \"Jul 4, 2021\",\n            cathegory: \"Task\",\n            content: \"Starting at 15:00\",\n            archived: true\n        },\n        {\n            id: 7,\n            taskName: \"Answer to emails\",\n            created: \"Sun Jul 04 2021 20:47:18 GMT+0200 (Восточная Европа, стандартное время)\",\n            createdTitle: \"Jul 4, 2021\",\n            cathegory: \"Task\",\n            content: \"\",\n            archived: false\n        }\n    ],\n    updated: [],\n    isOpen: false,\n}\n\nexport const taskReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case CREATE_TASK:\n            return { ...state, tasks: state.tasks.concat([action.payload]) }\n        case DELETE_TASK:\n            return { ...state, tasks: state.tasks.filter( el => el.id !== action.payload) }\n        case ARCHIVE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map(item=>{\n                     if(item.id === action.payload){\n                         return {\n                             ...item,\n                             archived: !item.archived\n                         }\n                     }else{\n                        return item\n                     }\n            })}\n        case UPDATE_TASK_MODAL_OPEN:\n             return { ...state, updated: state.tasks.filter( el => el.id === action.payload), isOpen:true }\n        case UPDATE_TASK_MODAL_CLOSE:\n            return { ...state, updated: [], isOpen:false }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map(item=>{\n                     if(item.id === action.payload.id){\n                         return {\n                             ...item,\n                             ...action.payload.data\n                         }\n                     }else{\n                        return item\n                     }\n            })}\n        default: return state;\n    }\n}","import { combineReducers } from \"redux\"\nimport { tableReducer } from \"./tableReducer\"\nimport { taskReducer } from \"./taskReducer\"\n\nexport const rootReducer = combineReducers({\n    tasks: taskReducer,\n    table: tableReducer,\n})\n\n","import React from 'react';\nimport {render} from 'react-dom';\n\n//SCSS\nimport './scss/main.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, compose } from 'redux';\nimport { Provider } from 'react-redux'; \nimport { rootReducer } from './redux/rootReducer';\n\nconst store = createStore(rootReducer, compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()));\n\n\nrender(\n  <Provider store={store}>\n      <React.StrictMode>\n        <App /> \n      </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}